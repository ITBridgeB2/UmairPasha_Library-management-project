{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Admin1\\\\Desktop\\\\Library Book Management\\\\my-library-management\\\\src\\\\HistoryBooks.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport \"./Bookslists.css\"; // Import the global styles here\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function HistoryBooks() {\n  _s();\n  const [books, setBooks] = useState([]); // Ensure books is an empty array initially\n\n  useEffect(() => {\n    fetch(\"http://localhost:5000/api/books/history\").then(res => res.json()).then(data => {\n      if (Array.isArray(data)) {\n        // Check if the data is an array\n        setBooks(data); // Update the books state if the data is valid\n      } else {\n        console.error(\"Error: Data fetched is not an array\");\n      }\n    }).catch(err => console.error(\"Error fetching history books:\", err));\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"fiction-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"History Books\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"fiction-list\",\n      children: Array.isArray(books) && books.map(book =>\n      /*#__PURE__*/\n      // Ensure books is an array before calling map\n      _jsxDEV(\"li\", {\n        children: /*#__PURE__*/_jsxDEV(Link, {\n          to: `/book/${book.id}`,\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: book.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 28,\n            columnNumber: 15\n          }, this), \" by \", book.author]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 13\n        }, this)\n      }, book.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this);\n}\n_s(HistoryBooks, \"ww1JAI05mMsgubm5EIyBKqdj5S0=\");\n_c = HistoryBooks;\nvar _c;\n$RefreshReg$(_c, \"HistoryBooks\");","map":{"version":3,"names":["React","useEffect","useState","Link","jsxDEV","_jsxDEV","HistoryBooks","_s","books","setBooks","fetch","then","res","json","data","Array","isArray","console","error","catch","err","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","book","to","id","title","author","_c","$RefreshReg$"],"sources":["C:/Users/Admin1/Desktop/Library Book Management/my-library-management/src/HistoryBooks.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"./Bookslists.css\";  // Import the global styles here\r\n\r\nexport default function HistoryBooks() {\r\n  const [books, setBooks] = useState([]);  // Ensure books is an empty array initially\r\n\r\n  useEffect(() => {\r\n    fetch(\"http://localhost:5000/api/books/history\")\r\n      .then((res) => res.json())\r\n      .then((data) => {\r\n        if (Array.isArray(data)) {  // Check if the data is an array\r\n          setBooks(data);  // Update the books state if the data is valid\r\n        } else {\r\n          console.error(\"Error: Data fetched is not an array\");\r\n        }\r\n      })\r\n      .catch((err) => console.error(\"Error fetching history books:\", err));\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"fiction-container\">\r\n      <h2>History Books</h2>\r\n      <ul className=\"fiction-list\">\r\n        {Array.isArray(books) && books.map((book) => (  // Ensure books is an array before calling map\r\n          <li key={book.id}>\r\n            <Link to={`/book/${book.id}`}>\r\n              <strong>{book.title}</strong> by {book.author}\r\n            </Link>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,IAAI,QAAQ,kBAAkB;AACvC,OAAO,kBAAkB,CAAC,CAAE;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAE5B,eAAe,SAASC,YAAYA,CAAA,EAAG;EAAAC,EAAA;EACrC,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAE;;EAEzCD,SAAS,CAAC,MAAM;IACdS,KAAK,CAAC,yCAAyC,CAAC,CAC7CC,IAAI,CAAEC,GAAG,IAAKA,GAAG,CAACC,IAAI,CAAC,CAAC,CAAC,CACzBF,IAAI,CAAEG,IAAI,IAAK;MACd,IAAIC,KAAK,CAACC,OAAO,CAACF,IAAI,CAAC,EAAE;QAAG;QAC1BL,QAAQ,CAACK,IAAI,CAAC,CAAC,CAAE;MACnB,CAAC,MAAM;QACLG,OAAO,CAACC,KAAK,CAAC,qCAAqC,CAAC;MACtD;IACF,CAAC,CAAC,CACDC,KAAK,CAAEC,GAAG,IAAKH,OAAO,CAACC,KAAK,CAAC,+BAA+B,EAAEE,GAAG,CAAC,CAAC;EACxE,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEf,OAAA;IAAKgB,SAAS,EAAC,mBAAmB;IAAAC,QAAA,gBAChCjB,OAAA;MAAAiB,QAAA,EAAI;IAAa;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACtBrB,OAAA;MAAIgB,SAAS,EAAC,cAAc;MAAAC,QAAA,EACzBP,KAAK,CAACC,OAAO,CAACR,KAAK,CAAC,IAAIA,KAAK,CAACmB,GAAG,CAAEC,IAAI;MAAA;MAAQ;MAC9CvB,OAAA;QAAAiB,QAAA,eACEjB,OAAA,CAACF,IAAI;UAAC0B,EAAE,EAAE,SAASD,IAAI,CAACE,EAAE,EAAG;UAAAR,QAAA,gBAC3BjB,OAAA;YAAAiB,QAAA,EAASM,IAAI,CAACG;UAAK;YAAAR,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAS,CAAC,QAAI,EAACE,IAAI,CAACI,MAAM;QAAA;UAAAT,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACzC;MAAC,GAHAE,IAAI,CAACE,EAAE;QAAAP,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAIZ,CACL;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACF,CAAC;AAEV;AAACnB,EAAA,CA9BuBD,YAAY;AAAA2B,EAAA,GAAZ3B,YAAY;AAAA,IAAA2B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}